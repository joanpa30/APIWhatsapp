name: Deploy APIWhatsapp

on:
  push:
    branches:
      - main  # Se ejecuta solo cuando haces push a la rama main

jobs:
  create-docker-image:
    runs-on: ubuntu-latest

    steps:
      # 🛠️ 1. Clonar el repositorio
      - name: Checkout the code
        uses: actions/checkout@v4

      # 🔑 2. Iniciar sesión en GitHub Container Registry (GHCR)
      - name: Login to Github Container Registry
        run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      
      # 🏗️ 3. Construir la imagen de Docker
      - name: Build the Docker Image
        run: |
            docker build -t ghcr.io/${{ github.repository_owner }}/apiwhatsapp:latest .

      # 🚀 4. Subir la imagen a GHCR
      - name: Upload the Image to GHCR
        run: |
            docker push ghcr.io/${{ github.repository_owner }}/apiwhatsapp:latest
        
  deploy:
    needs: create-docker-image
    runs-on: ubuntu-latest

    steps:
      # Install SSH into Server  
      - name: SSH into Server
        run: sudo apt-get install -y sshpass

      # 🔄 5. Conectar al VPS y actualizar el contenedor
      - name: Deploy into VPS
        run: |
            sshpass -p "${{ secrets.VPS_PASSWORD }}" ssh -o StrictHostKeyChecking=no -p ${{ secrets.VPS_PORT }} ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << EOF
                cd /root/APIWhatsapp/
                echo "Conectado al VPS"
                hostname
                docker login ghcr.io -u ${{ secrets.GHCR_USER }} -p ${{ secrets.GHCR_TOKEN }}
                docker pull ghcr.io/${{ secrets.GHCR_USER }}/apiwhatsapp:latest
                docker stop apiwhatsapp || true
                docker rm apiwhatsapp || true
                docker run -d --name apiwhatsapp -p 3000:3000 -p 3030:3030 ghcr.io/${{ secrets.GHCR_USER }}/apiwhatsapp:latest
                docker system prune -f
                docker ps
            EOF
         